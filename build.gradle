buildscript {
    ext {
        grailsVersion = project.grailsVersion
    }
    repositories {
        mavenLocal()
        maven {url "https://repo.grails.org/grails/core"}
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.6'
    }
}

version "3.2.6-SNAPSHOT"
group "org.grails.plugins"

apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: "org.grails.grails-plugin"
//apply plugin: "org.grails.grails-plugin-publish"
apply plugin: 'maven'
apply plugin: 'com.jfrog.bintray'

ext {
    grailsVersion = project.grailsVersion
    gradleWrapperVersion = project.gradleWrapperVersion
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenLocal()
    maven {url "https://repo.grails.org/grails/core"}
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

dependencies {

    // Grails Plugin Deps
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    console "org.grails:grails-console"
    profile "org.grails.profiles:plugin:$grailsVersion"
    provided "org.grails:grails-plugin-services"
    provided "org.grails:grails-plugin-domain-class"
    testCompile "org.grails:grails-plugin-testing"

    // Extra grails deps
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-web-mvc"

    // Extra plugin deps
    compile 'org.codehaus.groovy:groovy-all:2.4.6'
    compile "commons-lang:commons-lang:2.0"
    compile 'com.rabbitmq:amqp-client:3.6.1'
    provided 'javax.servlet:javax.servlet-api:3.1.0'
}

task wrapper(type: Wrapper) {
    gradleVersion = gradleWrapperVersion
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    pkg {
        repo = 'maven'
        name = project.name
        userOrg = 'olliefreeman'
        licenses = ['Apache-2.0']
        websiteUrl = 'https://github.com/olliefreeman/grails-rabbitmq-native'
        vcsUrl = 'https://github.com/olliefreeman/grails-rabbitmq-native.git'
        githubRepo = 'olliefreeman/grails-rabbitmq-native'
        githubReleaseNotesFile = 'README.md'
        version {
            name = project.version
            desc = "Grails RabbitMq Native Plugin For Grails 3.1.x - ${project.name} ${project.version}"
            released = new Date()
            vcsTag = "v${project.version}-rabbitmq-native3"
        }
    }
    configurations = ['archives']
    dryRun = false //Whether to run this as dry-run, without deploying
    publish = true //If version should be auto published after an upload
}
//
//grailsPublish {
//    // TODO: Provide values here
//    user = 'user'
//    key = 'key'
//    githubSlug = 'foo/bar'
//    license {
//        name = 'Apache-2.0'
//    }
//    title = "My Plugin"
//    desc = "Full plugin description"
//    developers = [johndoe:"John Doe"]
//    portalUser = ""
//    portalPassword = ""
//}

List excludedFiles = [
        "**/application.groovy",
        "**/com/budjb/rabbitmq/test/**"
]

jar {
    excludedFiles.each {
        exclude it
    }
}

sourcesJar {
    excludedFiles.each {
        exclude it
    }
}

javadocJar {
    excludedFiles.each {
        exclude it
    }
}

artifacts {
    archives sourcesJar
    archives javadocJar
}